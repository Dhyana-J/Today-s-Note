
***공부를 할 때는 대상에 대한 경험을 먼저하고, 이론으로 세밀하게 이해해라.  반대로하면 대상을 전혀 품을 수 없다. 
	즉, 최대한 많은 차원에서 경험해라.

<KH>

@Data & Database

*Data? 
정의 : 관찰 결과로 나타난 정량적 혹은 정성적인 실제 값

음...가공되지않은 캐낸 데이터 그 자체를 의미하는 것 아닐까


*정보?
정의 : Data를 기반으로 의미를 부여한 것

데이터를 가지고 해석한 것. 즉 의미를 부여한 것이 Information이다!

*Database?
정의 : 한 조직에 필요한 "정보"를 여러 응용 시스템에서 공유하여 사용할 수 있도록 논리적으로 연관된 "데이터"를 모으고, 
중복되는 데이터를 최소화해  구조적으로 통합 / 저장해놓은 것.

- 공용 데이터(Shared Data) : 공동으로 사용되는 데이터
- 통합 데이터(Integrated Data) : 중복 최소화로, 중복으로 인한 데이터 불일치 현상 제거
	-> Q. 중복인데 데이터 불일치한다고? 아, 값들이 수정되면 업데이트가 중구난방으로 되는 건가
- 저장 데이터(Stored Data) : 컴퓨터 저장장치에 저장된 데이터.
- 운영 데이터(Operational Data) : 조직의 목적을 위해 사용되는 데이터

*DB의 특징
- 실시간 접근성(real time accessibility) : 사용자가 데이터 요청 시 실시간으로 결과를 서비스
- 계속적 변화 (continuous change) : 데이터값은 시간에 따라 항상 바뀐다. 계속해서 상호작용하기때문.
- 동시 공유(concurrent sharing) : 서로 다른 업무 또는 여러 사용자에게 동시 공유
	->Q. 동시공유하면 충돌나지 않을까?


*DBMS(DataBase Management System)
정의 : DB에서 데이터 추출, 조작, 정의, 제어 등을 할 수 있도록 해주는 DB전용 관리 프로그램이다.

기능
- 데이터 추출(Retrieval) : 사용자가 조회하는 데이터 혹은 응용 프로그램의 데이터를 추출한다.
- 데이터 조작(Manipulation) : 데이터 조작 소프트웨어(application)가 요청하는 데이터 삽입,수정,삭제작업 지원
- 데이터 정의(Definition) : 데이터 구조 정의하고, 데이터 구조에 대한 삭제 및 변경기능 수행
- 데이터 제어(Control) : DB 사용자 생성하고, 모니터링. 접근제어함. 백업과 회복, 동시성 제어 등 기능을 지원한다.

*관계형 DB (Relational DB)
정의 : 키와 값들의 간단한 관계를 테이블화 시킨 매우 간단한 원칙의 전산정보 데이터베이스이다. (Wiki)
	모든 데이터를 2차원 테이블 형태로 표현하고, 테이블 사이의 비즈니스적 관계를 도출하는 구조.
	데이터의 중복을 최소화할 수 있으며 업무 변화에 대한 적응력이 우수하다.(KH)


@Oracle SQL Developer

-- : 한 줄 주석처리

/**/ : 여러 줄 주석처리

CREATE USER 계정명 IDENTIFIED BY 비밀번호; : 새로운 계정 생성 구문

GRANT 권한, 권한, ... TO 대상계정명; : 계정에 권한 부여. 최소한 (CONNECT, RESOURCE)

컬럼명 AS 별칭 | 컬럼명 AS "별칭" | 컬럼명 별칭 | 컬럼명 "별칭" : 컬럼명에 별칭 지정. (별칭에 특수문자나 공백 있으면 반드시 쌍따옴표 묶어야함)

<DISTINCT>
컬럼에 포함된 중복값을 단 한번씩만 표시하고자 할 때 사용
단, SELECT DISTINCT바로 다음절에 기술한 컬럼 수 기준으로 중복 처리함! 
-> a,b,c 컬럼중 a만 쓰면 a의 중복제거. a,b 쓰면 a와 b 합친 기준으로 중복제거 a,b,c는 셋 다 합친 기준으로 중복제거.
https://epdl-studio.tistory.com/32 참고.

<WHERE>
WHERE 조건
SELECT ~~~ FROM ~~~ WHERE 조건
(조건에 값 정의하려면 홑따옴표로 묶어줘야한다)

조건식에서 '!=' '^=' '<>'이 세 종류는 같은 식이다.


쿼리 날릴 때 도메인(칼럼) 데이터내부 값을 제외하면 소문자든 대문자든 상관없다. 대소문자 안가린다.
테이블 내부에 담겨있는 데이터값은 대소문자 가린다. 조회할 때 있는 그대로 제시해주어야한다.

FROM->WHERE->SELECT 순서대로 컴퓨터가 실행함.
그래서 WHERE절에다가 SELECT에서 컬럼에 부여한 별칭 못씀.


@복습, 빡공해야할 것
JAVA 특히 Collection!! 그리고, mvc패턴관련해서 잘 익혀두자. 익혀두자.

