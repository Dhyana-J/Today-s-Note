
<생활코딩>

@상속과 생성자
super
생성자에쓰면 -> 하위클래스의 생성자에 super를 써줌으로써, 상위 클래스의 생성자를 이용해 하위클래스 값을 초기화하기 위함
메소드에쓰면 -> 상위클래스 메소드를 그대로 하위클래스에 쓰면 중복이 발생하므로, 
		하위클래스 메소드 내용에 super.상위메소드() 이런식으로 가능
@Overriding
하위 클래스에서 상위 클래스의 동일한 메소드를 재정의하는 것. 동작 방법을 좀 변경해주는 것, 하지만 변경에도 한계가 있음!
*아래의 세 가지 조건을 만족시켜야 Overriding이 가능하다!
-메소드의 이름
-메소드 매개변수의 숫자와 데이터 타입 그리고 순서
-메소드의 리턴 타입

@Overloading
이름은 같지만 시그니처는 다른 메소드를 중복으로 선언할 수 있는 방법. 
ex)똑같은 메소드를 하나 더 만들어서, 매개변수를 더 받는 것도 overloading이다.
하지만 메소드 반환값 ex) "Sring" method() ""부분은 오버로딩 불가하다.
 
패키지 수업까지 했음.
<KH>

@변수, 형변환

자바는 기본적으로 실수를 입력하면 double 형으로 설정한다. 
그래서 float 할때 1.0f 와 같이 f를 붙여준 것이다. 
이것은 사실상 형변환이나 마찬가지!

***
실수형이 모든 정수형보다 표현 범위가 훨씬 넓다! (부동소수점 표기법 덕분인가?)
그래서 float(4byte)에 long(8byte)값을 대입해도 자동 형변환이 잘 이루어진다.

//			*특이케이스*
//			int와 char은 쌍방향 형변환이 가능하다. 다만 조건이 있음
//			(int->char은 int변수 대입하면 오류남. 리터럴로 해야 오류안남) char a = b; 오류남. b는 int
//			(char->int는 변수대입해도 된다.) int a = b; b는 char.
//			ex) int a = 'a' or char b = 99 이런 식으로. 

***
byte끼리 더하면 자동으로 int가 된다. 이걸byte에 넣으면 오류나지.

printf 사용법
%o, %x, %d, %c(대문자는 %C), %s(대문자는 %S), %f(소수점 아래 6자리 반올림), %e, %g(대입 값 그대로), %A(16진수 실수), %b(boolean)
이건 변수 자료형에 맞게 잘 써주자. 형변환이 따로 알아서 되지 않음.
