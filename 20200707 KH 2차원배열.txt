
@2차원 배열

2차원 배열을 초기화 할 때.

int arr[][] = new arr[3][]; 

이런식으로 행만 초기화주는것은 가능하다.

하지만 

new arr[][3]; 

이런식으로 행을 비워놓는 경우 오류가 발생한다.

왜???

기본적으로 2차원배열을 선언하면,

Stack에 있는 2차원 배열변수 arr에 행의 시작주소가 할당되고,

Heap에는 이 행의 주소가 각각 배정된다.

그 후 열이 지정되면, 

각 행의 주소는 열에의해 생성된 1차원 배열을 참조하게 된다.

*** '->'화살표를 참조라고 한다면, ***
2차원배열변수 -> 2차원배열의 행 -> 2차원배열의 열 

열값의 정보를 얻기 위해 참조가 두 번에 걸쳐 일어난다.

2차원배열변수는 2차원배열의 행의 시작주소를 저장. 이건 arr[0]과는 다르다! 
(Heap에 있는 행의 주소와 생성된 행 배열[0]의 주소가 다름)

2차원배열의 행들은 각각 행으로부터 시작되는 2차원배열의 열의 시작주소를 저장. 각 행의 주소는 각 열의 시작주소다.


그러니까 인간의 상상력으로 네모판자같이 사각형 면처럼 2차원배열을 떠올릴 수 있지만, 
사실은 그냥 1차원 배열 여러개를 가지고 2차원 배열처럼 동작하게끔 만드는 거다. 
굳이 2차원 사각형 면 안떠올리고 여기저기 배열들이 두둥실 떠다닌다고 해도, 
행배열이 "위치한 주소"와, 행에 저장된 "열들의 시작주소"를 알면 다 참조 가능하다는 뜻이다.

2차원 배열 가변으로 초기화할 경우!
int[][] arr = new int[3][]; 

이런식으로 행만 만들어놓고,

arr[0] = new int[3];
arr[1] = new int[2];
arr[2] = new int[1]; 

이렇게 각각 열을 지정해 줄 수 있다.